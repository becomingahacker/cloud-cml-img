#!/bin/bash

#
# This file is part of Cisco Modeling Labs
# Copyright (c) 2019-2023, Cisco Systems, Inc.
# All rights reserved.
#

set -x
set -e

function base_setup() {
    # current location of the bucket w/ software and images
    AWS_DEFAULT_REGION="$${AWS_REGION}"
    APT_OPTS="-o Dpkg::Options::=--force-confmiss -o Dpkg::Options::=--force-confnew"
    APT_OPTS+=" -o DPkg::Progress-Fancy=0 -o APT::Color=0"
    DEBIAN_FRONTEND=noninteractive
    export APT_OPTS DEBIAN_FRONTEND AWS_DEFAULT_REGION

    # copy debian package from bucket into our instance
    aws s3 cp --no-progress "s3://$${AWS_BUCKET}/$${APP_DEB}" /provision/

    # copy node definitions and images to the instance
    VLLI=/var/lib/libvirt/images
    NDEF=node-definitions
    IDEF=virl-base-images
    mkdir -p $VLLI/$NDEF

    # copy all node definitions as defined in the provisioned config
    if [ $(jq </provision/reference_platforms.json '.definitions|length') -gt 0 ]; then
        elems=$(jq </provision/reference_platforms.json -rc '.definitions|join(" ")')
        for item in $elems; do
            aws s3 cp --no-progress "s3://$${AWS_BUCKET}/refplat/$NDEF/$item.yaml" "$VLLI/$NDEF/"
        done
    fi

    # copy all image definitions as defined in the provisioned config
    if [ $(jq </provision/reference_platforms.json '.images|length') -gt 0 ]; then
        elems=$(jq </provision/reference_platforms.json -rc '.images|join(" ")')
        for item in $elems; do
            mkdir -p $VLLI/$IDEF/$item
            aws s3 cp --no-progress --recursive "s3://$${AWS_BUCKET}/refplat/$IDEF/$item/" "$VLLI/$IDEF/$item/"
        done
    fi

    # if there's no images at this point, copy what's available in the bucket
    if [ $(find $VLLI -type f | wc -l) -eq 0 ]; then
        aws s3 cp --no-progress --recursive s3://$${AWS_BUCKET}/refplat/ $VLLI/
    fi

    apt-get update
    apt-get upgrade -y
    systemctl stop ssh
%{ if debug_build ~}
    strace -T -f -e trace=%process apt-get install -y "/provision/$${APP_DEB}"
%{ else ~}
    apt-get install -y "/provision/$${APP_DEB}"
%{ endif ~}
    systemctl start ssh
    systemctl disable unattended-upgrades.service

    # For troubleshooting. To allow console access on AWS, the root user needs a
    # password. Note: not all instance types / flavors provide a serial console!
    # echo "root:secret-password-here" | /usr/sbin/chpasswd

    # Save the machine ID as a reference for the build
    # This is the default password when installing CML and will be changed when
    # deploying later
    cat /etc/machine-id > /provision/build-machine-id 
    chmod 0600 /provision/build-machine-id 
}

cd $(dirname "$0")
source config.sh

# Only run the base setup when there's a provision directory
if [ -d /provision ]; then
    base_setup
fi
